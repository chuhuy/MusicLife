<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="E:/UET1920I/Mobile/music-life-new/MusicLife/android/app/src/main/assets/www/db.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1798"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="4" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,15:mainsqlite_sequence"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">CREATE TABLE genre (
	genre_id INTEGER NOT NULL PRIMARY KEY,
	name NVARCHAR(40) NOT NULL,
	image_url VARCHAR(100)
);

CREATE TABLE artist (
	artist_id INTEGER NOT NULL PRIMARY KEY,
	name NVARCHAR(40) NOT NULL,
	description TEXT,
	image_url VARCHAR(100)
);

CREATE TABLE playlist (
  playlist_id INTEGER NOT NULL,
  name NVARCHAR(50) NOT NULL,
  uuid INTEGER NOT NULL,
  image_url VARCHAR(100),
   PRIMARY KEY (playlist_id),
   FOREIGN KEY (uuid) REFERENCES user (uuid) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE playlist_music (
  playlist_id INTEGER NOT NULL,
  music_id INTEGER NOT NULL,
  PRIMARY KEY (playlist_id, music_id),
  FOREIGN KEY (playlist_id) REFERENCES playlist (playlist_id) ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY (music_id) REFERENCES music (music_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE music (
  music_id INTEGER NOT NULL,
  title NVARCHAR(40) NOT NULL,
  release_date DATETIME NOT NULL,
  url VARCHAR(100) NOT NULL,
  image_url VARCHAR(100),
  album_id INTEGER,
  loved INTEGER,
  FOREIGN KEY (album_id) REFERENCES album (album_id) ON DELETE RESTRICT ON UPDATE CASCADE
  PRIMARY KEY (music_id)
);

CREATE TABLE music_genre (
  music_id INTEGER NOT NULL,
  genre_id INTEGER NOT NULL,
  PRIMARY KEY (music_id, genre_id),
  FOREIGN KEY (music_id) REFERENCES music (music_id) ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY (genre_id) REFERENCES genre (genre_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE music_artist (
  music_id INTEGER NOT NULL,
  artist_id INTEGER NOT NULL,
  PRIMARY KEY (music_id, artist_id),
  FOREIGN KEY (music_id) REFERENCES music (music_id) ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY (artist_id) REFERENCES artist (artist_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE album (
  album_id INTEGER NOT NULL,
  title NVARCHAR(40) NOT NULL,
  release_date DATETIME NOT NULL,
  image_url VARCHAR(100),
  description TEXT,
   PRIMARY KEY (album_id)
);

CREATE TABLE album_artist (
  album_id INTEGER NOT NULL,
  artist_id INTEGER NOT NULL,
  PRIMARY KEY (album_id, artist_id),
  FOREIGN KEY (album_id) REFERENCES album (album_id) ON DELETE RESTRICT ON UPDATE CASCADE,
  FOREIGN KEY (artist_id) REFERENCES artist (artist_id) ON DELETE RESTRICT ON UPDATE CASCADE
);</sql><current_tab id="0"/></tab_sql></sqlb_project>
